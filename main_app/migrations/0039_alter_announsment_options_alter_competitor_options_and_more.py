# Generated by Django 5.1.4 on 2025-06-15 08:26

import django.core.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0038_competitor_banned'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='announsment',
            options={'verbose_name': 'Объявление', 'verbose_name_plural': 'Объявления'},
        ),
        migrations.AlterModelOptions(
            name='competitor',
            options={'verbose_name': 'Участник', 'verbose_name_plural': 'Участники'},
        ),
        migrations.AlterModelOptions(
            name='micromatch',
            options={'permissions': [('can_save_score', 'Can save match score'), ('can_generate_match', 'Can generate new match')], 'verbose_name': 'Микроматч', 'verbose_name_plural': 'Микроматчи'},
        ),
        migrations.AlterModelOptions(
            name='profile',
            options={'permissions': [('cant_reg_in_tour', 'Cannot register in tournament')], 'verbose_name': 'Профиль пользователя', 'verbose_name_plural': 'Профили пользователей'},
        ),
        migrations.AlterModelOptions(
            name='tournament',
            options={'permissions': [('can_start_tour', 'Can start new tournament'), ('can_shift_timetable', 'Can shift timetable')], 'verbose_name': 'Турнир', 'verbose_name_plural': 'Турниры'},
        ),
        migrations.AlterModelOptions(
            name='tournamentgroup',
            options={'verbose_name': 'Группа турнира', 'verbose_name_plural': 'Группы турнира'},
        ),
        migrations.AlterField(
            model_name='announsment',
            name='text',
            field=models.TextField(max_length=500, verbose_name='Текст'),
        ),
        migrations.AlterField(
            model_name='announsment',
            name='title',
            field=models.CharField(max_length=150, verbose_name='Заголовок'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='age',
            field=models.IntegerField(verbose_name='Возраст'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='banned',
            field=models.BooleanField(default=False, verbose_name='Исключен'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='gender',
            field=models.CharField(choices=[('M', 'мужской'), ('W', 'женский')], default='M', verbose_name='Пол'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='goals_scored',
            field=models.IntegerField(default=0, verbose_name='Забитые'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='goals_taken',
            field=models.IntegerField(default=0, verbose_name='Пропущенные'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='group_id',
            field=models.IntegerField(blank=True, null=True, verbose_name='ID группы'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='matches_played',
            field=models.IntegerField(default=0, verbose_name='Матчей сыграно'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='name',
            field=models.CharField(max_length=50, verbose_name='Имя'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='player_id',
            field=models.IntegerField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID игрока'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='rating',
            field=models.IntegerField(null=True, verbose_name='Рейтинг'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='role',
            field=models.CharField(choices=[('forward', 'нападающий'), ('defender', 'защитник'), ('goalkeeper', 'вратарь')], default='forward', verbose_name='Роль'),
        ),
        migrations.AlterField(
            model_name='micromatch',
            name='field_num',
            field=models.IntegerField(default=1, verbose_name='Номер поля'),
        ),
        migrations.AlterField(
            model_name='micromatch',
            name='group_id',
            field=models.IntegerField(null=True, verbose_name='ID группы'),
        ),
        migrations.AlterField(
            model_name='micromatch',
            name='isPlayed',
            field=models.BooleanField(default=False, verbose_name='Матч сыгран'),
        ),
        migrations.AlterField(
            model_name='micromatch',
            name='matchRating',
            field=models.IntegerField(verbose_name='Средний рейтинг'),
        ),
        migrations.AlterField(
            model_name='micromatch',
            name='match_id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID матча'),
        ),
        migrations.AlterField(
            model_name='micromatch',
            name='start_time',
            field=models.TimeField(default=django.utils.timezone.now, verbose_name='Время начала'),
        ),
        migrations.AlterField(
            model_name='micromatch',
            name='team1_players',
            field=models.JSONField(verbose_name='Команда 1'),
        ),
        migrations.AlterField(
            model_name='micromatch',
            name='team1_score',
            field=models.IntegerField(default=0, verbose_name='Счет первой команды'),
        ),
        migrations.AlterField(
            model_name='micromatch',
            name='team2_players',
            field=models.JSONField(verbose_name='Команда 2'),
        ),
        migrations.AlterField(
            model_name='micromatch',
            name='team2_score',
            field=models.IntegerField(default=0, verbose_name='Счет второй команды'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='age',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(6), django.core.validators.MaxValueValidator(80)], verbose_name='Возраст'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='category',
            field=models.CharField(blank=True, choices=[('новичок', 'новичок'), ('любитель', 'любитель'), ('III юношеский', 'III юношеский'), ('II юношеский', 'II юношеский'), ('I юношеский', 'I юношеский'), ('III спортивный', 'III спортивный'), ('II спортивный', 'II спортивный'), ('I спортивный', 'I спортивный'), ('КМС', 'КМС'), ('ГР', 'ГР'), ('МСМК', 'МСМК')], null=True, verbose_name='Уровень подготовки'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='fullname',
            field=models.CharField(max_length=200, verbose_name='ФИО'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='gender',
            field=models.CharField(choices=[('M', 'мужской'), ('W', 'женский')], verbose_name='Пол'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='mobile_phone',
            field=models.CharField(max_length=20, verbose_name='Телефон'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='previous_ratings',
            field=models.JSONField(default=list, verbose_name='Прошлые рейтинги'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='rating',
            field=models.IntegerField(default=0, null=True, verbose_name='Рейтинг'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='role',
            field=models.CharField(blank=True, choices=[('forward', 'нападающий'), ('defender', 'защитник'), ('goalkeeper', 'вратарь')], null=True, verbose_name='Роль'),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='date',
            field=models.DateField(default=django.utils.timezone.now, verbose_name='Дата'),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='isEnded',
            field=models.BooleanField(default=False, verbose_name='Турнир закончен'),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='minutes_btwn_groups',
            field=models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Перерыв между группами (мин)'),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='minutes_btwn_matches',
            field=models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Перерыв между  матчами (мин)'),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='played_with_matrix',
            field=models.JSONField(default=list, verbose_name='Матрица встреч игроков'),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='playing_groups_ids',
            field=models.JSONField(default=list, verbose_name='ID групп турнира'),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='time_started',
            field=models.TimeField(default=django.utils.timezone.now, verbose_name='Время начала'),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='tour_id',
            field=models.IntegerField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Номер турнира'),
        ),
        migrations.AlterField(
            model_name='tournamentgroup',
            name='age_spread',
            field=models.IntegerField(default=1, verbose_name='Разброс по возрасту в матче'),
        ),
        migrations.AlterField(
            model_name='tournamentgroup',
            name='group_age_pool',
            field=models.JSONField(default=tuple, verbose_name='Диапазон возраста'),
        ),
        migrations.AlterField(
            model_name='tournamentgroup',
            name='group_gender',
            field=models.CharField(verbose_name='Пол участников'),
        ),
        migrations.AlterField(
            model_name='tournamentgroup',
            name='group_id',
            field=models.IntegerField(verbose_name='ID группы'),
        ),
        migrations.AlterField(
            model_name='tournamentgroup',
            name='stopped_played',
            field=models.BooleanField(default=False, verbose_name='Закончила играть'),
        ),
    ]
